#   * official english documentation: http://nginx.org/en/docs/
#   * official russian documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# load dynamic modules. see /usr/share/doc/nginx/readme.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    

    access_log  /var/log/nginx/access.log	 main;
    
    ssl_session_cache	shared:ssl:10m;
    ssl_session_timeout 10m;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
    
    upstream app_server {
	server 127.0.0.1:5000 fail_timeout=0;
    }

    server_names_hash_bucket_size 64;

    server {
	listen 127.0.0.1:80;
	server_name localhost;

	return 301 https://$host$request_uri;
    }

    # settings for a tls enabled server.
    server {
        listen       443 ssl http2 default_server;
        server_name 	localhost;

        ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key	/etc/ssl/private/nginx-selfsigned.key;
        ssl_protocols 	tlsv1 tlsv1.1 tlsv1.2;
        ssl_ciphers	HIGH:!aNULL:!MD5;

	
        location / {
            root	    /path/to/front-end/dist/front-end;
            index index.html;	    
            try_files $uri $uri/ /index.html;
        }
	
        location /api/ {
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_send_timeout 300;
            alias /path/to/back-end/;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
                proxy_set_header x-forwarded-proto $scheme;
                proxy_set_header host $http_host;
            proxy_redirect off;

            proxy_pass http://app_server;
        }

        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }
}